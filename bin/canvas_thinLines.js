// Generated by Haxe 4.3.0-rc.1+
(function ($global) { "use strict";
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var htmlHelper_canvas_CanvasSetup = function() {
	this.factor = 4.;
	this.divertTrace = new htmlHelper_tools_DivertTrace();
	var e = null;
	var this1;
	if(e == null) {
		var canvas = window.document.createElement("canvas");
		var dom = canvas;
		var style = dom.style;
		style.paddingLeft = "0px";
		style.paddingTop = "0px";
		style.left = "0px";
		style.top = "0px";
		style.position = "absolute";
		this1 = canvas;
	} else {
		this1 = e;
	}
	this.canvasWrapper = this1;
	this.canvasWrapper.width = 1024;
	this.canvasWrapper.height = 768;
	var dom = this.canvasWrapper;
	var style = dom.style;
	style.background = "black";
	window.document.body.appendChild(this.canvasWrapper);
	var this1 = new htmlHelper_canvas_CanvasPlus(this.canvasWrapper.getContext("2d",null),10,10);
	this1.me.lineWidth = 1;
	var tmp = StringTools.hex(16744272,6);
	this1.me.strokeStyle = "#" + tmp;
	this.surface = this1;
	this.overSampleCanvas();
};
htmlHelper_canvas_CanvasSetup.__name__ = true;
htmlHelper_canvas_CanvasSetup.prototype = {
	overSampleCanvas: function() {
		var ctx = this.surface.me;
		var canvas = this.canvasWrapper;
		var width = canvas.width;
		var height = canvas.height;
		canvas.width = 0 | (width * this.factor | 0);
		canvas.height = 0 | (height * this.factor | 0);
		var dom = this.canvasWrapper;
		var style = dom.style;
		style.width = width + "px";
		style.height = height + "px";
		ctx.scale(this.factor,this.factor);
	}
};
var htmlHelper_canvas_CanvasPlus = function(me,x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
	this.me = me;
};
htmlHelper_canvas_CanvasPlus.__name__ = true;
var htmlHelper_tools_DivertTrace = function(left,d) {
	if(left == null) {
		left = 610;
	}
	this.textStyle1 = "<span style=\"font-size:14px; color:Grey\">";
	this.textStyle0 = "<span style=\"font-size:12px; color:Silver\">";
	this.traceString = "";
	this.divertTrace(left,d);
};
htmlHelper_tools_DivertTrace.__name__ = true;
htmlHelper_tools_DivertTrace.prototype = {
	divertTrace: function(left,d) {
		if(d == null) {
			var doc = window.document;
			this.traceDiv = doc.createElement("div");
			doc.body.appendChild(this.traceDiv);
			var dom = this.traceDiv;
			var style = dom.style;
			style.position = "absolute";
			style.top = "0px";
			style.left = (left == null ? "null" : "" + left) + "px";
			style.height = "500px";
			style.width = "500px";
			style.zIndex = "99";
			style.overflow = "auto";
		} else {
			this.traceDiv = d;
		}
		haxe_Log.trace = $bind(this,this.myTrace);
	}
	,myTrace: function(v,inf) {
		if(Std.string(v) == "") {
			return;
		}
		this.traceString += this.textStyle0 + inf.className + "." + inf.methodName + " ( " + (inf.lineNumber == null ? "null" : "" + inf.lineNumber) + " )" + "</span>" + "<br> - " + this.textStyle1 + Std.string(v) + "</span>" + "<br>";
		this.traceDiv.innerHTML = this.traceString;
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var pixelimageXY_ImageStruct = function(width,height,image) {
	this.useMask = false;
	this.useVirtualPos = false;
	this.virtualY = 0;
	this.virtualX = 0;
	this.transparent = false;
	this.width = width;
	this.height = height;
	this.image = image;
	this.isLittle = pixelimageXY_Endian_isLittleEndian;
	this.transparent = false;
};
pixelimageXY_ImageStruct.__name__ = true;
var pixelimage_$samples_pixelimage_$canvas_ThinLines = function() {
	this.canvasSetup = new htmlHelper_canvas_CanvasSetup();
	var surface = this.canvasSetup.surface;
	var this1 = new Uint32Array(12582912);
	var this2 = new pixelimageXY_ImageStruct(4096,3072,this1);
	var this1 = this2;
	var pixelShape = this1;
	pixelShape.transparent = true;
	var midX = 400;
	var midY = 400;
	var radius = 280;
	var x = 0.;
	var y = 0.;
	var num = 18;
	var step = 2 * Math.PI / num;
	var theta = 0.;
	var _g = 0;
	var _g1 = num;
	while(_g < _g1) {
		var i = _g++;
		x = midX + radius * Math.sin(theta);
		y = midY + radius * Math.cos(theta);
		haxe_Log.trace(x + " " + y,{ fileName : "src/pixelimage_samples/pixelimage_canvas/ThinLines.hx", lineNumber : 33, className : "pixelimage_samples.pixelimage_canvas.ThinLines", methodName : "new"});
		theta += step;
		var pixelImage = pixelShape;
		var x0 = midX;
		var y0 = midY;
		var x1 = x;
		var y1 = y;
		var color = pixelimage_$samples_pixelimage_$canvas_ThinLines_colors[i];
		var a = color >> 24 & 255;
		var r = color >> 16 & 255;
		var g = color >> 8 & 255;
		var b = color & 255;
		var steep = Math.abs(y1 - y0) > Math.abs(x1 - x0);
		var temp = 0.;
		if(steep) {
			temp = y0;
			y0 = x0;
			x0 = temp;
			temp = y1;
			y1 = x1;
			x1 = temp;
		}
		if(x0 > x1) {
			temp = x1;
			x1 = x0;
			x0 = temp;
			temp = y1;
			y1 = y0;
			y0 = temp;
		}
		var dx = x1 - x0;
		var dy = y1 - y0;
		var gradient = dx == 0.0 ? 1. : dy / dx;
		var xend = Math.floor(x0) + 0.5;
		var yend = y0 + gradient * (xend - x0);
		var v = x0 + 0.5;
		var xgap = 1 - v + Math.floor(v);
		var xpxl1 = xend | 0;
		var ypxl1 = Math.floor(yend);
		var a0 = 0;
		if(steep) {
			var i1 = a * ((1 - yend + Math.floor(yend)) * xgap) | 0;
			if(i1 > 255) {
				i1 = 255;
			}
			if(i1 < 0) {
				i1 = 0;
			}
			var this1 = i1;
			a0 = this1;
			var location = pixelImage.useVirtualPos ? (xpxl1 - pixelImage.virtualY) * pixelImage.width + ypxl1 - pixelImage.virtualX | 0 : xpxl1 * pixelImage.width + ypxl1 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this2 = pixelImage.image[location];
				var this3 = this2;
				var old = pixelimageXY_Endian_isLittleEndian ? (this3 >> 24 & 255) << 24 | (this3 & 255) << 16 | (this3 >> 8 & 255) << 8 | this3 >> 16 & 255 : this3;
				var rhs = a0 << 24 | r << 16 | g << 8 | b;
				var this4 = old >> 24 & 255;
				var a1 = this4 == 0 ? 0. : this4 / 255;
				var this5 = old >> 16 & 255;
				var r1 = this5 == 0 ? 0. : this5 / 255;
				var this6 = old >> 8 & 255;
				var g1 = this6 == 0 ? 0. : this6 / 255;
				var this7 = old & 255;
				var b1 = this7 == 0 ? 0. : this7 / 255;
				var this8 = rhs >> 24 & 255;
				var a2 = this8 == 0 ? 0. : this8 / 255;
				var this9 = rhs >> 16 & 255;
				var r2 = this9 == 0 ? 0. : this9 / 255;
				var this10 = rhs >> 8 & 255;
				var g2 = this10 == 0 ? 0. : this10 / 255;
				var this11 = rhs & 255;
				var b2 = this11 == 0 ? 0. : this11 / 255;
				var a3 = a1 * (1 - a2);
				var r3 = 255 * (r1 * a3 + r2 * a2) | 0;
				var g3 = 255 * (g1 * a3 + g2 * a2) | 0;
				var b3 = 255 * (b1 * a3 + b2 * a2) | 0;
				var a4 = 255 * (a3 + a2) | 0;
				var blended = a4 << 24 | r3 << 16 | g3 << 8 | b3;
				pixelImage.image[location] = pixelimageXY_Endian_isLittleEndian ? (blended >> 24 & 255) << 24 | (blended & 255) << 16 | (blended >> 8 & 255) << 8 | blended >> 16 & 255 : blended;
			} else {
				pixelImage.image[location] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
			var i2 = a * ((yend - Math.floor(yend)) * xgap) | 0;
			if(i2 > 255) {
				i2 = 255;
			}
			if(i2 < 0) {
				i2 = 0;
			}
			var this12 = i2;
			a0 = this12;
			var x2 = ypxl1 + 1;
			var location1 = pixelImage.useVirtualPos ? (xpxl1 - pixelImage.virtualY) * pixelImage.width + x2 - pixelImage.virtualX | 0 : xpxl1 * pixelImage.width + x2 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this13 = pixelImage.image[location1];
				var this14 = this13;
				var old1 = pixelimageXY_Endian_isLittleEndian ? (this14 >> 24 & 255) << 24 | (this14 & 255) << 16 | (this14 >> 8 & 255) << 8 | this14 >> 16 & 255 : this14;
				var rhs1 = a0 << 24 | r << 16 | g << 8 | b;
				var this15 = old1 >> 24 & 255;
				var a11 = this15 == 0 ? 0. : this15 / 255;
				var this16 = old1 >> 16 & 255;
				var r11 = this16 == 0 ? 0. : this16 / 255;
				var this17 = old1 >> 8 & 255;
				var g11 = this17 == 0 ? 0. : this17 / 255;
				var this18 = old1 & 255;
				var b11 = this18 == 0 ? 0. : this18 / 255;
				var this19 = rhs1 >> 24 & 255;
				var a21 = this19 == 0 ? 0. : this19 / 255;
				var this20 = rhs1 >> 16 & 255;
				var r21 = this20 == 0 ? 0. : this20 / 255;
				var this21 = rhs1 >> 8 & 255;
				var g21 = this21 == 0 ? 0. : this21 / 255;
				var this22 = rhs1 & 255;
				var b21 = this22 == 0 ? 0. : this22 / 255;
				var a31 = a11 * (1 - a21);
				var r4 = 255 * (r11 * a31 + r21 * a21) | 0;
				var g4 = 255 * (g11 * a31 + g21 * a21) | 0;
				var b4 = 255 * (b11 * a31 + b21 * a21) | 0;
				var a5 = 255 * (a31 + a21) | 0;
				var blended1 = a5 << 24 | r4 << 16 | g4 << 8 | b4;
				pixelImage.image[location1] = pixelimageXY_Endian_isLittleEndian ? (blended1 >> 24 & 255) << 24 | (blended1 & 255) << 16 | (blended1 >> 8 & 255) << 8 | blended1 >> 16 & 255 : blended1;
			} else {
				pixelImage.image[location1] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
		} else {
			var i3 = a * ((1 - yend + Math.floor(yend)) * xgap) | 0;
			if(i3 > 255) {
				i3 = 255;
			}
			if(i3 < 0) {
				i3 = 0;
			}
			var this23 = i3;
			a0 = this23;
			var location2 = pixelImage.useVirtualPos ? (ypxl1 - pixelImage.virtualY) * pixelImage.width + xpxl1 - pixelImage.virtualX | 0 : ypxl1 * pixelImage.width + xpxl1 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this24 = pixelImage.image[location2];
				var this25 = this24;
				var old2 = pixelimageXY_Endian_isLittleEndian ? (this25 >> 24 & 255) << 24 | (this25 & 255) << 16 | (this25 >> 8 & 255) << 8 | this25 >> 16 & 255 : this25;
				var rhs2 = a0 << 24 | r << 16 | g << 8 | b;
				var this26 = old2 >> 24 & 255;
				var a12 = this26 == 0 ? 0. : this26 / 255;
				var this27 = old2 >> 16 & 255;
				var r12 = this27 == 0 ? 0. : this27 / 255;
				var this28 = old2 >> 8 & 255;
				var g12 = this28 == 0 ? 0. : this28 / 255;
				var this29 = old2 & 255;
				var b12 = this29 == 0 ? 0. : this29 / 255;
				var this30 = rhs2 >> 24 & 255;
				var a22 = this30 == 0 ? 0. : this30 / 255;
				var this31 = rhs2 >> 16 & 255;
				var r22 = this31 == 0 ? 0. : this31 / 255;
				var this32 = rhs2 >> 8 & 255;
				var g22 = this32 == 0 ? 0. : this32 / 255;
				var this33 = rhs2 & 255;
				var b22 = this33 == 0 ? 0. : this33 / 255;
				var a32 = a12 * (1 - a22);
				var r5 = 255 * (r12 * a32 + r22 * a22) | 0;
				var g5 = 255 * (g12 * a32 + g22 * a22) | 0;
				var b5 = 255 * (b12 * a32 + b22 * a22) | 0;
				var a6 = 255 * (a32 + a22) | 0;
				var blended2 = a6 << 24 | r5 << 16 | g5 << 8 | b5;
				pixelImage.image[location2] = pixelimageXY_Endian_isLittleEndian ? (blended2 >> 24 & 255) << 24 | (blended2 & 255) << 16 | (blended2 >> 8 & 255) << 8 | blended2 >> 16 & 255 : blended2;
			} else {
				pixelImage.image[location2] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
			var i4 = a * ((yend - Math.floor(yend)) * xgap) | 0;
			if(i4 > 255) {
				i4 = 255;
			}
			if(i4 < 0) {
				i4 = 0;
			}
			var this34 = i4;
			a0 = this34;
			var y2 = ypxl1 + 1;
			var location3 = pixelImage.useVirtualPos ? (y2 - pixelImage.virtualY) * pixelImage.width + xpxl1 - pixelImage.virtualX | 0 : y2 * pixelImage.width + xpxl1 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this35 = pixelImage.image[location3];
				var this36 = this35;
				var old3 = pixelimageXY_Endian_isLittleEndian ? (this36 >> 24 & 255) << 24 | (this36 & 255) << 16 | (this36 >> 8 & 255) << 8 | this36 >> 16 & 255 : this36;
				var rhs3 = a0 << 24 | r << 16 | g << 8 | b;
				var this37 = old3 >> 24 & 255;
				var a13 = this37 == 0 ? 0. : this37 / 255;
				var this38 = old3 >> 16 & 255;
				var r13 = this38 == 0 ? 0. : this38 / 255;
				var this39 = old3 >> 8 & 255;
				var g13 = this39 == 0 ? 0. : this39 / 255;
				var this40 = old3 & 255;
				var b13 = this40 == 0 ? 0. : this40 / 255;
				var this41 = rhs3 >> 24 & 255;
				var a23 = this41 == 0 ? 0. : this41 / 255;
				var this42 = rhs3 >> 16 & 255;
				var r23 = this42 == 0 ? 0. : this42 / 255;
				var this43 = rhs3 >> 8 & 255;
				var g23 = this43 == 0 ? 0. : this43 / 255;
				var this44 = rhs3 & 255;
				var b23 = this44 == 0 ? 0. : this44 / 255;
				var a33 = a13 * (1 - a23);
				var r6 = 255 * (r13 * a33 + r23 * a23) | 0;
				var g6 = 255 * (g13 * a33 + g23 * a23) | 0;
				var b6 = 255 * (b13 * a33 + b23 * a23) | 0;
				var a7 = 255 * (a33 + a23) | 0;
				var blended3 = a7 << 24 | r6 << 16 | g6 << 8 | b6;
				pixelImage.image[location3] = pixelimageXY_Endian_isLittleEndian ? (blended3 >> 24 & 255) << 24 | (blended3 & 255) << 16 | (blended3 >> 8 & 255) << 8 | blended3 >> 16 & 255 : blended3;
			} else {
				pixelImage.image[location3] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
		}
		var intery = yend + gradient;
		var xend1 = Math.floor(x1) + 0.5;
		var yend1 = y1 + gradient * (xend1 - x1);
		var v1 = x1 + 0.5;
		var xgap1 = v1 - Math.floor(v1);
		var xpxl2 = xend1 | 0;
		var ypxl2 = Math.floor(yend1);
		if(steep) {
			var i5 = a * ((1 - yend1 + Math.floor(yend1)) * xgap1) | 0;
			if(i5 > 255) {
				i5 = 255;
			}
			if(i5 < 0) {
				i5 = 0;
			}
			var this45 = i5;
			a0 = this45;
			var location4 = pixelImage.useVirtualPos ? (xpxl2 - pixelImage.virtualY) * pixelImage.width + ypxl2 - pixelImage.virtualX | 0 : xpxl2 * pixelImage.width + ypxl2 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this46 = pixelImage.image[location4];
				var this47 = this46;
				var old4 = pixelimageXY_Endian_isLittleEndian ? (this47 >> 24 & 255) << 24 | (this47 & 255) << 16 | (this47 >> 8 & 255) << 8 | this47 >> 16 & 255 : this47;
				var rhs4 = a0 << 24 | r << 16 | g << 8 | b;
				var this48 = old4 >> 24 & 255;
				var a14 = this48 == 0 ? 0. : this48 / 255;
				var this49 = old4 >> 16 & 255;
				var r14 = this49 == 0 ? 0. : this49 / 255;
				var this50 = old4 >> 8 & 255;
				var g14 = this50 == 0 ? 0. : this50 / 255;
				var this51 = old4 & 255;
				var b14 = this51 == 0 ? 0. : this51 / 255;
				var this52 = rhs4 >> 24 & 255;
				var a24 = this52 == 0 ? 0. : this52 / 255;
				var this53 = rhs4 >> 16 & 255;
				var r24 = this53 == 0 ? 0. : this53 / 255;
				var this54 = rhs4 >> 8 & 255;
				var g24 = this54 == 0 ? 0. : this54 / 255;
				var this55 = rhs4 & 255;
				var b24 = this55 == 0 ? 0. : this55 / 255;
				var a34 = a14 * (1 - a24);
				var r7 = 255 * (r14 * a34 + r24 * a24) | 0;
				var g7 = 255 * (g14 * a34 + g24 * a24) | 0;
				var b7 = 255 * (b14 * a34 + b24 * a24) | 0;
				var a8 = 255 * (a34 + a24) | 0;
				var blended4 = a8 << 24 | r7 << 16 | g7 << 8 | b7;
				pixelImage.image[location4] = pixelimageXY_Endian_isLittleEndian ? (blended4 >> 24 & 255) << 24 | (blended4 & 255) << 16 | (blended4 >> 8 & 255) << 8 | blended4 >> 16 & 255 : blended4;
			} else {
				pixelImage.image[location4] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
			var i6 = a * ((yend1 - Math.floor(yend1)) * xgap1) | 0;
			if(i6 > 255) {
				i6 = 255;
			}
			if(i6 < 0) {
				i6 = 0;
			}
			var this56 = i6;
			a0 = this56;
			var x3 = ypxl2 + 1;
			var location5 = pixelImage.useVirtualPos ? (xpxl2 - pixelImage.virtualY) * pixelImage.width + x3 - pixelImage.virtualX | 0 : xpxl2 * pixelImage.width + x3 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this57 = pixelImage.image[location5];
				var this58 = this57;
				var old5 = pixelimageXY_Endian_isLittleEndian ? (this58 >> 24 & 255) << 24 | (this58 & 255) << 16 | (this58 >> 8 & 255) << 8 | this58 >> 16 & 255 : this58;
				var rhs5 = a0 << 24 | r << 16 | g << 8 | b;
				var this59 = old5 >> 24 & 255;
				var a15 = this59 == 0 ? 0. : this59 / 255;
				var this60 = old5 >> 16 & 255;
				var r15 = this60 == 0 ? 0. : this60 / 255;
				var this61 = old5 >> 8 & 255;
				var g15 = this61 == 0 ? 0. : this61 / 255;
				var this62 = old5 & 255;
				var b15 = this62 == 0 ? 0. : this62 / 255;
				var this63 = rhs5 >> 24 & 255;
				var a25 = this63 == 0 ? 0. : this63 / 255;
				var this64 = rhs5 >> 16 & 255;
				var r25 = this64 == 0 ? 0. : this64 / 255;
				var this65 = rhs5 >> 8 & 255;
				var g25 = this65 == 0 ? 0. : this65 / 255;
				var this66 = rhs5 & 255;
				var b25 = this66 == 0 ? 0. : this66 / 255;
				var a35 = a15 * (1 - a25);
				var r8 = 255 * (r15 * a35 + r25 * a25) | 0;
				var g8 = 255 * (g15 * a35 + g25 * a25) | 0;
				var b8 = 255 * (b15 * a35 + b25 * a25) | 0;
				var a9 = 255 * (a35 + a25) | 0;
				var blended5 = a9 << 24 | r8 << 16 | g8 << 8 | b8;
				pixelImage.image[location5] = pixelimageXY_Endian_isLittleEndian ? (blended5 >> 24 & 255) << 24 | (blended5 & 255) << 16 | (blended5 >> 8 & 255) << 8 | blended5 >> 16 & 255 : blended5;
			} else {
				pixelImage.image[location5] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
		} else {
			var i7 = a * ((1 - yend1 + Math.floor(yend1)) * xgap1) | 0;
			if(i7 > 255) {
				i7 = 255;
			}
			if(i7 < 0) {
				i7 = 0;
			}
			var this67 = i7;
			a0 = this67;
			var location6 = pixelImage.useVirtualPos ? (ypxl2 - pixelImage.virtualY) * pixelImage.width + xpxl2 - pixelImage.virtualX | 0 : ypxl2 * pixelImage.width + xpxl2 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this68 = pixelImage.image[location6];
				var this69 = this68;
				var old6 = pixelimageXY_Endian_isLittleEndian ? (this69 >> 24 & 255) << 24 | (this69 & 255) << 16 | (this69 >> 8 & 255) << 8 | this69 >> 16 & 255 : this69;
				var rhs6 = a0 << 24 | r << 16 | g << 8 | b;
				var this70 = old6 >> 24 & 255;
				var a16 = this70 == 0 ? 0. : this70 / 255;
				var this71 = old6 >> 16 & 255;
				var r16 = this71 == 0 ? 0. : this71 / 255;
				var this72 = old6 >> 8 & 255;
				var g16 = this72 == 0 ? 0. : this72 / 255;
				var this73 = old6 & 255;
				var b16 = this73 == 0 ? 0. : this73 / 255;
				var this74 = rhs6 >> 24 & 255;
				var a26 = this74 == 0 ? 0. : this74 / 255;
				var this75 = rhs6 >> 16 & 255;
				var r26 = this75 == 0 ? 0. : this75 / 255;
				var this76 = rhs6 >> 8 & 255;
				var g26 = this76 == 0 ? 0. : this76 / 255;
				var this77 = rhs6 & 255;
				var b26 = this77 == 0 ? 0. : this77 / 255;
				var a36 = a16 * (1 - a26);
				var r9 = 255 * (r16 * a36 + r26 * a26) | 0;
				var g9 = 255 * (g16 * a36 + g26 * a26) | 0;
				var b9 = 255 * (b16 * a36 + b26 * a26) | 0;
				var a10 = 255 * (a36 + a26) | 0;
				var blended6 = a10 << 24 | r9 << 16 | g9 << 8 | b9;
				pixelImage.image[location6] = pixelimageXY_Endian_isLittleEndian ? (blended6 >> 24 & 255) << 24 | (blended6 & 255) << 16 | (blended6 >> 8 & 255) << 8 | blended6 >> 16 & 255 : blended6;
			} else {
				pixelImage.image[location6] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
			var i8 = a * ((yend1 - Math.floor(yend1)) * xgap1) | 0;
			if(i8 > 255) {
				i8 = 255;
			}
			if(i8 < 0) {
				i8 = 0;
			}
			var this78 = i8;
			a0 = this78;
			var y3 = ypxl2 + 1;
			var location7 = pixelImage.useVirtualPos ? (y3 - pixelImage.virtualY) * pixelImage.width + xpxl2 - pixelImage.virtualX | 0 : y3 * pixelImage.width + xpxl2 | 0;
			if(pixelImage.transparent && a0 < 254) {
				var this79 = pixelImage.image[location7];
				var this80 = this79;
				var old7 = pixelimageXY_Endian_isLittleEndian ? (this80 >> 24 & 255) << 24 | (this80 & 255) << 16 | (this80 >> 8 & 255) << 8 | this80 >> 16 & 255 : this80;
				var rhs7 = a0 << 24 | r << 16 | g << 8 | b;
				var this81 = old7 >> 24 & 255;
				var a17 = this81 == 0 ? 0. : this81 / 255;
				var this82 = old7 >> 16 & 255;
				var r17 = this82 == 0 ? 0. : this82 / 255;
				var this83 = old7 >> 8 & 255;
				var g17 = this83 == 0 ? 0. : this83 / 255;
				var this84 = old7 & 255;
				var b17 = this84 == 0 ? 0. : this84 / 255;
				var this85 = rhs7 >> 24 & 255;
				var a27 = this85 == 0 ? 0. : this85 / 255;
				var this86 = rhs7 >> 16 & 255;
				var r27 = this86 == 0 ? 0. : this86 / 255;
				var this87 = rhs7 >> 8 & 255;
				var g27 = this87 == 0 ? 0. : this87 / 255;
				var this88 = rhs7 & 255;
				var b27 = this88 == 0 ? 0. : this88 / 255;
				var a37 = a17 * (1 - a27);
				var r10 = 255 * (r17 * a37 + r27 * a27) | 0;
				var g10 = 255 * (g17 * a37 + g27 * a27) | 0;
				var b10 = 255 * (b17 * a37 + b27 * a27) | 0;
				var a18 = 255 * (a37 + a27) | 0;
				var blended7 = a18 << 24 | r10 << 16 | g10 << 8 | b10;
				pixelImage.image[location7] = pixelimageXY_Endian_isLittleEndian ? (blended7 >> 24 & 255) << 24 | (blended7 & 255) << 16 | (blended7 >> 8 & 255) << 8 | blended7 >> 16 & 255 : blended7;
			} else {
				pixelImage.image[location7] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
			}
		}
		var startX = xpxl1 + 1;
		var endX = xpxl2 - 1;
		haxe_Log.trace("start " + startX + " end " + endX,{ fileName : "pixelimageXY/algo/Xiolin_Wu_Line.hx", lineNumber : 78, className : "pixelimageXY.algo._Xiolin_Wu_Line.Xiolin_Wu_Line_Fields_", methodName : "xWuLine"});
		var info = "";
		var pos = "";
		if(steep) {
			var _g2 = startX;
			var _g3 = endX;
			while(_g2 < _g3) {
				var x4 = _g2++;
				var i9 = a * 0.75 + 0.25 * a * (1 - intery + Math.floor(intery)) | 0;
				if(i9 > 255) {
					i9 = 255;
				}
				if(i9 < 0) {
					i9 = 0;
				}
				var this89 = i9;
				a0 = this89;
				info += "a01 " + a0 + " ";
				var x5 = Math.floor(intery);
				var location8 = pixelImage.useVirtualPos ? (x4 - pixelImage.virtualY) * pixelImage.width + x5 - pixelImage.virtualX | 0 : x4 * pixelImage.width + x5 | 0;
				if(pixelImage.transparent && a0 < 254) {
					var this90 = pixelImage.image[location8];
					var this91 = this90;
					var old8 = pixelimageXY_Endian_isLittleEndian ? (this91 >> 24 & 255) << 24 | (this91 & 255) << 16 | (this91 >> 8 & 255) << 8 | this91 >> 16 & 255 : this91;
					var rhs8 = a0 << 24 | r << 16 | g << 8 | b;
					var this92 = old8 >> 24 & 255;
					var a19 = this92 == 0 ? 0. : this92 / 255;
					var this93 = old8 >> 16 & 255;
					var r18 = this93 == 0 ? 0. : this93 / 255;
					var this94 = old8 >> 8 & 255;
					var g18 = this94 == 0 ? 0. : this94 / 255;
					var this95 = old8 & 255;
					var b18 = this95 == 0 ? 0. : this95 / 255;
					var this96 = rhs8 >> 24 & 255;
					var a28 = this96 == 0 ? 0. : this96 / 255;
					var this97 = rhs8 >> 16 & 255;
					var r28 = this97 == 0 ? 0. : this97 / 255;
					var this98 = rhs8 >> 8 & 255;
					var g28 = this98 == 0 ? 0. : this98 / 255;
					var this99 = rhs8 & 255;
					var b28 = this99 == 0 ? 0. : this99 / 255;
					var a38 = a19 * (1 - a28);
					var r19 = 255 * (r18 * a38 + r28 * a28) | 0;
					var g19 = 255 * (g18 * a38 + g28 * a28) | 0;
					var b19 = 255 * (b18 * a38 + b28 * a28) | 0;
					var a20 = 255 * (a38 + a28) | 0;
					var blended8 = a20 << 24 | r19 << 16 | g19 << 8 | b19;
					pixelImage.image[location8] = pixelimageXY_Endian_isLittleEndian ? (blended8 >> 24 & 255) << 24 | (blended8 & 255) << 16 | (blended8 >> 8 & 255) << 8 | blended8 >> 16 & 255 : blended8;
				} else {
					pixelImage.image[location8] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
				}
				pos += "" + Math.floor(intery) + " ";
				var i10 = a * 0.75 + 0.25 * a * (intery - Math.floor(intery)) | 0;
				if(i10 > 255) {
					i10 = 255;
				}
				if(i10 < 0) {
					i10 = 0;
				}
				var this100 = i10;
				a0 = this100;
				info += "a02 " + a0 + " ";
				var x6 = Math.floor(intery) + 1;
				var location9 = pixelImage.useVirtualPos ? (x4 - pixelImage.virtualY) * pixelImage.width + x6 - pixelImage.virtualX | 0 : x4 * pixelImage.width + x6 | 0;
				if(pixelImage.transparent && a0 < 254) {
					var this101 = pixelImage.image[location9];
					var this102 = this101;
					var old9 = pixelimageXY_Endian_isLittleEndian ? (this102 >> 24 & 255) << 24 | (this102 & 255) << 16 | (this102 >> 8 & 255) << 8 | this102 >> 16 & 255 : this102;
					var rhs9 = a0 << 24 | r << 16 | g << 8 | b;
					var this103 = old9 >> 24 & 255;
					var a110 = this103 == 0 ? 0. : this103 / 255;
					var this104 = old9 >> 16 & 255;
					var r110 = this104 == 0 ? 0. : this104 / 255;
					var this105 = old9 >> 8 & 255;
					var g110 = this105 == 0 ? 0. : this105 / 255;
					var this106 = old9 & 255;
					var b110 = this106 == 0 ? 0. : this106 / 255;
					var this107 = rhs9 >> 24 & 255;
					var a29 = this107 == 0 ? 0. : this107 / 255;
					var this108 = rhs9 >> 16 & 255;
					var r29 = this108 == 0 ? 0. : this108 / 255;
					var this109 = rhs9 >> 8 & 255;
					var g29 = this109 == 0 ? 0. : this109 / 255;
					var this110 = rhs9 & 255;
					var b29 = this110 == 0 ? 0. : this110 / 255;
					var a39 = a110 * (1 - a29);
					var r20 = 255 * (r110 * a39 + r29 * a29) | 0;
					var g20 = 255 * (g110 * a39 + g29 * a29) | 0;
					var b20 = 255 * (b110 * a39 + b29 * a29) | 0;
					var a30 = 255 * (a39 + a29) | 0;
					var blended9 = a30 << 24 | r20 << 16 | g20 << 8 | b20;
					pixelImage.image[location9] = pixelimageXY_Endian_isLittleEndian ? (blended9 >> 24 & 255) << 24 | (blended9 & 255) << 16 | (blended9 >> 8 & 255) << 8 | blended9 >> 16 & 255 : blended9;
				} else {
					pixelImage.image[location9] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
				}
				pos += "" + Math.floor(intery) + " ";
				intery += gradient;
			}
		} else {
			var _g4 = startX;
			var _g5 = endX;
			while(_g4 < _g5) {
				var x7 = _g4++;
				var i11 = a * 0.75 + 0.25 * a * (1 - intery + Math.floor(intery)) | 0;
				if(i11 > 255) {
					i11 = 255;
				}
				if(i11 < 0) {
					i11 = 0;
				}
				var this111 = i11;
				a0 = this111;
				info += "a01 " + a0 + " ";
				var y4 = Math.floor(intery);
				var location10 = pixelImage.useVirtualPos ? (y4 - pixelImage.virtualY) * pixelImage.width + x7 - pixelImage.virtualX | 0 : y4 * pixelImage.width + x7 | 0;
				if(pixelImage.transparent && a0 < 254) {
					var this112 = pixelImage.image[location10];
					var this113 = this112;
					var old10 = pixelimageXY_Endian_isLittleEndian ? (this113 >> 24 & 255) << 24 | (this113 & 255) << 16 | (this113 >> 8 & 255) << 8 | this113 >> 16 & 255 : this113;
					var rhs10 = a0 << 24 | r << 16 | g << 8 | b;
					var this114 = old10 >> 24 & 255;
					var a111 = this114 == 0 ? 0. : this114 / 255;
					var this115 = old10 >> 16 & 255;
					var r111 = this115 == 0 ? 0. : this115 / 255;
					var this116 = old10 >> 8 & 255;
					var g111 = this116 == 0 ? 0. : this116 / 255;
					var this117 = old10 & 255;
					var b111 = this117 == 0 ? 0. : this117 / 255;
					var this118 = rhs10 >> 24 & 255;
					var a210 = this118 == 0 ? 0. : this118 / 255;
					var this119 = rhs10 >> 16 & 255;
					var r210 = this119 == 0 ? 0. : this119 / 255;
					var this120 = rhs10 >> 8 & 255;
					var g210 = this120 == 0 ? 0. : this120 / 255;
					var this121 = rhs10 & 255;
					var b210 = this121 == 0 ? 0. : this121 / 255;
					var a310 = a111 * (1 - a210);
					var r30 = 255 * (r111 * a310 + r210 * a210) | 0;
					var g30 = 255 * (g111 * a310 + g210 * a210) | 0;
					var b30 = 255 * (b111 * a310 + b210 * a210) | 0;
					var a40 = 255 * (a310 + a210) | 0;
					var blended10 = a40 << 24 | r30 << 16 | g30 << 8 | b30;
					pixelImage.image[location10] = pixelimageXY_Endian_isLittleEndian ? (blended10 >> 24 & 255) << 24 | (blended10 & 255) << 16 | (blended10 >> 8 & 255) << 8 | blended10 >> 16 & 255 : blended10;
				} else {
					pixelImage.image[location10] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
				}
				pos += "" + Math.floor(intery) + " ";
				var i12 = a * 0.75 + 0.25 * a * (intery - Math.floor(intery)) | 0;
				if(i12 > 255) {
					i12 = 255;
				}
				if(i12 < 0) {
					i12 = 0;
				}
				var this122 = i12;
				a0 = this122;
				info += "a02 " + a0 + " ";
				var y5 = Math.floor(intery) + 1;
				var location11 = pixelImage.useVirtualPos ? (y5 - pixelImage.virtualY) * pixelImage.width + x7 - pixelImage.virtualX | 0 : y5 * pixelImage.width + x7 | 0;
				if(pixelImage.transparent && a0 < 254) {
					var this123 = pixelImage.image[location11];
					var this124 = this123;
					var old11 = pixelimageXY_Endian_isLittleEndian ? (this124 >> 24 & 255) << 24 | (this124 & 255) << 16 | (this124 >> 8 & 255) << 8 | this124 >> 16 & 255 : this124;
					var rhs11 = a0 << 24 | r << 16 | g << 8 | b;
					var this125 = old11 >> 24 & 255;
					var a112 = this125 == 0 ? 0. : this125 / 255;
					var this126 = old11 >> 16 & 255;
					var r112 = this126 == 0 ? 0. : this126 / 255;
					var this127 = old11 >> 8 & 255;
					var g112 = this127 == 0 ? 0. : this127 / 255;
					var this128 = old11 & 255;
					var b112 = this128 == 0 ? 0. : this128 / 255;
					var this129 = rhs11 >> 24 & 255;
					var a211 = this129 == 0 ? 0. : this129 / 255;
					var this130 = rhs11 >> 16 & 255;
					var r211 = this130 == 0 ? 0. : this130 / 255;
					var this131 = rhs11 >> 8 & 255;
					var g211 = this131 == 0 ? 0. : this131 / 255;
					var this132 = rhs11 & 255;
					var b211 = this132 == 0 ? 0. : this132 / 255;
					var a311 = a112 * (1 - a211);
					var r31 = 255 * (r112 * a311 + r211 * a211) | 0;
					var g31 = 255 * (g112 * a311 + g211 * a211) | 0;
					var b31 = 255 * (b112 * a311 + b211 * a211) | 0;
					var a41 = 255 * (a311 + a211) | 0;
					var blended11 = a41 << 24 | r31 << 16 | g31 << 8 | b31;
					pixelImage.image[location11] = pixelimageXY_Endian_isLittleEndian ? (blended11 >> 24 & 255) << 24 | (blended11 & 255) << 16 | (blended11 >> 8 & 255) << 8 | blended11 >> 16 & 255 : blended11;
				} else {
					pixelImage.image[location11] = pixelImage.isLittle ? a0 << 24 | b << 16 | g << 8 | r : a0 << 24 | r << 16 | g << 8 | b;
				}
				pos += "" + Math.floor(intery) + " ";
				intery += gradient;
			}
		}
	}
	var ctx = surface.me;
	if(pixelShape.useMask && pixelShape.mask != null) {
		var w = pixelShape.width;
		var h = pixelShape.height;
		var this1 = new Uint32Array(w * h | 0);
		var this2 = new pixelimageXY_ImageStruct(w,h,this1);
		var temp = this2;
		var _g = 0;
		var _g1 = pixelShape.image.length;
		while(_g < _g1) {
			var i = _g++;
			var this1 = pixelShape.image[i];
			var p0 = this1;
			var this2 = pixelShape.mask.image[i];
			var m1 = this2;
			var value;
			if(m1 == 0) {
				var this3 = p0;
				value = this3;
			} else {
				var this4 = m1 >> 24 & 255;
				var m0 = this4 == 0 ? 0. : this4 / 255;
				var this5 = m1 >> 16 & 255;
				var m11 = this5 == 0 ? 0. : this5 / 255;
				var this6 = m1 >> 8 & 255;
				var m2 = this6 == 0 ? 0. : this6 / 255;
				var this7 = m1 & 255;
				var m3 = this7 == 0 ? 0. : this7 / 255;
				var ch0 = (1. - m0) * (p0 >> 24 & 255) | 0;
				var ch1 = (1. - m11) * (p0 >> 16 & 255) | 0;
				var ch2 = (1. - m2) * (p0 >> 8 & 255) | 0;
				var ch3 = (1. - m3) * (p0 & 255) | 0;
				value = Math.round(ch0 * 255) << 24 | Math.round(ch1 * 255) << 16 | Math.round(ch2 * 255) << 8 | Math.round(ch3 * 255);
			}
			temp.image[i] = value;
		}
		var dataimg = temp.image;
		var data = new Uint8ClampedArray(new Uint8Array(dataimg.buffer).buffer);
		var imageData = new ImageData(data,pixelShape.width,pixelShape.height);
		if(pixelShape.useVirtualPos) {
			ctx.putImageData(imageData,0 - pixelShape.virtualX,0 - pixelShape.virtualY);
		} else {
			ctx.putImageData(imageData,0,0);
		}
	} else {
		var dataimg = pixelShape.image;
		var data = new Uint8ClampedArray(new Uint8Array(dataimg.buffer).buffer);
		var imageData = new ImageData(data,pixelShape.width,pixelShape.height);
		if(pixelShape.useVirtualPos) {
			ctx.putImageData(imageData,0 - pixelShape.virtualX,0 - pixelShape.virtualY);
		} else {
			ctx.putImageData(imageData,0,0);
		}
	}
};
pixelimage_$samples_pixelimage_$canvas_ThinLines.__name__ = true;
function pixelimage_$samples_pixelimage_$canvas_ThinLines_main() {
	new pixelimage_$samples_pixelimage_$canvas_ThinLines();
}
var vision_ds_Line2D = function(start,end) {
	this.end = new vision_ds_Point2D(0,0);
	this.start = new vision_ds_Point2D(0,0);
	this.start.x = start.x;
	this.start.y = start.y;
	this.end.x = end.x;
	this.end.y = end.y;
	var x = end.x - start.x;
	var y = end.y - start.y;
	this.radians = Math.atan2(x,y);
	this.slope = Math.tan(this.radians);
	this.degrees = this.radians * 180 / Math.PI;
};
vision_ds_Line2D.__name__ = true;
vision_ds_Line2D.prototype = {
	toString: function() {
		return "\n (" + Std.string(this.start) + ".x, " + Std.string(this.start) + ".y) --> (" + Std.string(this.end) + ".x, " + Std.string(this.end) + ".y)";
	}
};
var vision_ds_Point2D = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
vision_ds_Point2D.__name__ = true;
vision_ds_Point2D.prototype = {
	toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
var pixelimageXY_Endian_isLittleEndian = (function($this) {
	var $r;
	var a8 = new Uint8Array(4);
	var a32 = new Uint32Array(a8.buffer)[0] = -3407855;
	$r = a8[0] != 255;
	return $r;
}(this));
var pixelimage_$samples_pixelimage_$canvas_ThinLines_colors = [-33619968,-33587456,-33554688,-50266368,-50331393,-45416318,-40632109,-36515647,-36863960,-36528879,-35426008,-34576527,-36554447,-38851535,-40881346,-41534128,-44545443,-44785981,-47419235,-45778258,-46772883,-46691219,-43079864,-46768732,-45781438];
pixelimage_$samples_pixelimage_$canvas_ThinLines_main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
